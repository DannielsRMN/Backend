# Generated by Django 5.2.1 on 2025-05-27 05:03

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Alternativa',
            fields=[
                ('idAlternativa', models.AutoField(primary_key=True, serialize=False)),
                ('alternativa', models.CharField(max_length=250)),
                ('puntajeObtenido', models.BigIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Dificultad',
            fields=[
                ('idDificultad', models.AutoField(primary_key=True, serialize=False)),
                ('nombreDiff', models.CharField(max_length=50)),
                ('descDiff', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Especialidad',
            fields=[
                ('idEspecialidad', models.AutoField(primary_key=True, serialize=False)),
                ('nombreEspecialidad', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='EstadoFinal',
            fields=[
                ('idEstadoFinal', models.AutoField(primary_key=True, serialize=False)),
                ('nombreEstadoFinal', models.CharField(max_length=50)),
                ('descEstadoFinal', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Pregunta',
            fields=[
                ('idPregunta', models.AutoField(primary_key=True, serialize=False)),
                ('pregunta', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AlternativaSeleccionada',
            fields=[
                ('idRespuesta', models.AutoField(primary_key=True, serialize=False)),
                ('fechaRegistroRespuesta', models.DateField()),
                ('alternativa', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.alternativa')),
            ],
        ),
        migrations.CreateModel(
            name='FotoPerfil',
            fields=[
                ('idFoto', models.AutoField(primary_key=True, serialize=False)),
                ('pfp', models.ImageField(upload_to='imagenes/')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Modulo',
            fields=[
                ('idModulo', models.AutoField(primary_key=True, serialize=False)),
                ('nombreModulo', models.CharField(max_length=50)),
                ('dif', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.dificultad')),
                ('espe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.especialidad')),
            ],
        ),
        migrations.CreateModel(
            name='Perfil',
            fields=[
                ('idPerfil', models.AutoField(primary_key=True, serialize=False)),
                ('nickname', models.CharField(max_length=50)),
                ('puntajeTotal', models.IntegerField()),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='alternativa',
            name='pregunta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.pregunta'),
        ),
        migrations.CreateModel(
            name='Progreso',
            fields=[
                ('idProgreso', models.AutoField(primary_key=True, serialize=False)),
                ('porcentajeCompletado', models.FloatField()),
                ('fechaInicio', models.DateField()),
                ('fechaFin', models.DateField()),
                ('puntajeObtenido', models.IntegerField()),
                ('estadoFinal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.estadofinal')),
                ('modulo', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.modulo')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tema',
            fields=[
                ('idTema', models.AutoField(primary_key=True, serialize=False)),
                ('nombreTema', models.CharField(max_length=100)),
                ('modulo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.modulo')),
            ],
        ),
        migrations.AddField(
            model_name='pregunta',
            name='tema',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preguntas', to='api.tema'),
        ),
    ]
